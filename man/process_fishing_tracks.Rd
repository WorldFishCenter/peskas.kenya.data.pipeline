% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-tracks.R
\name{process_fishing_tracks}
\alias{process_fishing_tracks}
\title{Process GPS tracks for fishing effort analysis}
\usage{
process_fishing_tracks(
  tracks_file,
  ports_df,
  port_buffer_m = 500,
  trip_gap_hours = 2,
  standardize_interval = 300,
  fishing_speed_ms = 1.5,
  circle_radius_m = 2000,
  circle_time_window = 20
)
}
\arguments{
\item{tracks_file}{Path to parquet file containing vessel tracking data.
Must include columns: Time, Boat, Trip, Lat, Lng, Community}

\item{ports_df}{Data frame with port locations containing columns:
BMU (port name), lat (latitude), lon (longitude)}

\item{port_buffer_m}{Buffer radius around ports in meters to exclude
non-fishing activities (default 500m)}

\item{trip_gap_hours}{Time gap in hours to split tracks into separate trips
(default 2 hours)}

\item{standardize_interval}{Seconds between standardized position intervals.
Set to NULL to keep original temporal resolution (default 300 seconds)}

\item{fishing_speed_ms}{Maximum speed threshold for fishing activity in m/s
(default 1.5 m/s, approximately 3 knots)}

\item{circle_radius_m}{Radius in meters for spatial clustering analysis
to identify fishing grounds (default 2000m)}

\item{circle_time_window}{Number of time steps to consider for clustering
(default 20)}
}
\value{
List containing:
\item{processed_data}{SF object with classified fishing activities}
\item{effort_by_trip}{Summary of fishing hours per trip}
\item{spatial_effort}{Gridded spatial fishing effort}
\item{overall_summary}{Overall fishing effort statistics}
\item{parameters}{Parameters used in processing}
}
\description{
Main function to process GPS tracking data from fishing vessels,
identify fishing activities, and calculate effort metrics using speed-based
classification and spatial clustering algorithms.
}
\examples{
\dontrun{
# Define port locations
ports <- data.frame(
  BMU = c("Port1", "Port2"),
  lat = c(-4.5, -3.8),
  lon = c(39.2, 39.8)
)

# Process tracks with default parameters
results <- process_fishing_tracks(
  tracks_file = "vessel_tracks.parquet",
  ports_df = ports
)

# Process with custom parameters for slower vessels
results <- process_fishing_tracks(
  tracks_file = "vessel_tracks.parquet",
  ports_df = ports,
  fishing_speed_ms = 1.0,  # Lower speed threshold
  standardize_interval = NULL  # Keep original resolution
)

# Visualize results
plot <- visualize_fishing_track(results$processed_data)
print(plot)
}

}
